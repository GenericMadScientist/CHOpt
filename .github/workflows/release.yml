name: Release

on:
  push:
    tags:
      - 'v**'
  workflow_dispatch:

jobs:
  determine-version:
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.determine-version.outputs.version }}
    steps:
      - id: determine-version
        run: |
          if ${{ startsWith(github.ref, 'refs/tags/v') }}; then
            echo "version=${GITHUB_REF#refs/tags/v}" >> "$GITHUB_OUTPUT"
          else
            echo "version=${GITHUB_SHA:0:7}" >> "$GITHUB_OUTPUT"
          fi

  windows:
    runs-on: windows-2022
    needs: determine-version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.7.*

      - name: Install other dependencies
        run: vcpkg --triplet x64-windows-static-md install libpng

      - name: Make build directory
        run: mkdir build

      - name: Generate build files
        working-directory: build
        env:
          CMAKE_GENERATOR: "Visual Studio 17 2022"
          CMAKE_TOOLCHAIN_FILE: "C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
        run: cmake -DVCPKG_TARGET_TRIPLET=x64-windows-static-md -DENABLE_LTO=ON -DPACKAGE_TESTS=OFF ..

      - name: Build
        working-directory: build
        run: cmake --build . --verbose --config Release

      - name: Prepare CLI release
        working-directory: build/Release
        run: |
          mkdir ..\cli-artifacts
          Move-Item -Path chopt.exe -Destination ..\cli-artifacts\CHOpt.exe
          windeployqt --no-translations ..\cli-artifacts\CHOpt.exe

      - name: Prepare GUI release
        working-directory: build/Release
        run: |
          mkdir ..\gui-artifacts
          Rename-Item choptgui.exe CHOpt.exe
          $env:VCINSTALLDIR = "$env:ProgramFiles\Microsoft Visual Studio\2022\Enterprise\VC"
          windeployqt --release --no-network --no-opengl-sw --no-svg --no-system-d3d-compiler --no-translations CHOpt.exe
          rm vc_redist.x64.exe
          Copy-Item -Path * -Destination ..\gui-artifacts -Recurse

      - name: Upload CLI release
        uses: actions/upload-artifact@v4
        with:
          name: "CHOpt CLI ${{ needs.determine-version.outputs.version }} (x64 Windows)"
          path: build/cli-artifacts/**/*

      - name: Upload GUI release
        uses: actions/upload-artifact@v4
        with:
          name: "CHOpt ${{ needs.determine-version.outputs.version }} (x64 Windows)"
          path: build/gui-artifacts/**/*

  macos:
    runs-on: macos-14
    needs: determine-version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.7.*

      - name: Make build directory
        run: mkdir build

      - name: Generate build files
        working-directory: build
        env:
          CMAKE_BUILD_TYPE: Release
        run: cmake -DENABLE_LTO=ON -DPACKAGE_TESTS=OFF -DCMAKE_FIND_FRAMEWORK=LAST ..

      - name: Build
        working-directory: build
        run: cmake --build . --verbose

      - name: Prepare CLI release
        working-directory: build
        run: |
          mkdir cli-artifacts
          strip -x chopt
          install_name_tool -change /opt/homebrew/opt/libpng/lib/libpng16.16.dylib @executable_path/libpng.dylib chopt
          mv chopt cli-artifacts/CHOpt
          cp /opt/homebrew/lib/libpng.dylib cli-artifacts/libpng.dylib

      - name: Prepare GUI release
        working-directory: build
        run: |
          mkdir gui-artifacts
          mv choptgui.app CHOpt.app
          mv CHOpt.app/Contents/MacOS/choptgui CHOpt.app/Contents/MacOS/CHOpt
          sed -i "" "s/choptgui/CHOpt/g" CHOpt.app/Contents/Info.plist
          macdeployqt CHOpt.app
          mv CHOpt.app gui-artifacts/CHOpt.app

      - name: Upload CLI release
        uses: actions/upload-artifact@v4
        with:
          name: "CHOpt CLI ${{ needs.determine-version.outputs.version }} (x64 Mac)"
          path: build/cli-artifacts/**/*

      - name: Upload GUI release
        uses: actions/upload-artifact@v4
        with:
          name: "CHOpt ${{ needs.determine-version.outputs.version }} (x64 Mac)"
          path: build/gui-artifacts/**/*

  linux:
    runs-on: ubuntu-24.04
    needs: determine-version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install libpng
        run: |
          sudo apt-get update
          sudo apt-get install -y libpng-dev

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.6.*

      - name: Make build directory
        run: mkdir build

      - name: Generate build files
        working-directory: build
        env:
          CMAKE_BUILD_TYPE: Release
          CXX: g++-14
        run: cmake -DENABLE_LTO=ON -DPACKAGE_TESTS=OFF ..

      - name: Build
        working-directory: build
        run: cmake --build . --verbose

      - name: Prepare CLI release
        working-directory: build
        run: |
          mkdir cli-artifacts
          strip -s chopt
          mv chopt cli-artifacts/CHOpt
          cp ${QT_ROOT_DIR}/lib/libQt6Core.so.6 cli-artifacts/libQt6Core.so.6

      - name: Prepare GUI release
        working-directory: build
        run: |
          mkdir -p gui-artifacts/libs
          mkdir -p gui-artifacts/platforms
          strip -s choptgui
          mv choptgui gui-artifacts/CHOpt
          cp ../resources/CHOpt.sh gui-artifacts/CHOpt.sh
          cp ${QT_ROOT_DIR}/lib/libicudata.so.56 gui-artifacts/libs/libicudata.so.56
          cp ${QT_ROOT_DIR}/lib/libicui18n.so.56 gui-artifacts/libs/libicui18n.so.56
          cp ${QT_ROOT_DIR}/lib/libicuuc.so.56 gui-artifacts/libs/libicuuc.so.56
          cp ${QT_ROOT_DIR}/lib/libQt6Core.so.6 gui-artifacts/libs/libQt6Core.so.6
          cp ${QT_ROOT_DIR}/lib/libQt6DBus.so.6 gui-artifacts/libs/libQt6DBus.so.6
          cp ${QT_ROOT_DIR}/lib/libQt6Gui.so.6 gui-artifacts/libs/libQt6Gui.so.6
          cp ${QT_ROOT_DIR}/lib/libQt6OpenGL.so.6 gui-artifacts/libs/libQt6OpenGL.so.6
          cp ${QT_ROOT_DIR}/lib/libQt6Widgets.so.6 gui-artifacts/libs/libQt6Widgets.so.6
          cp ${QT_ROOT_DIR}/lib/libQt6XcbQpa.so.6 gui-artifacts/libs/libQt6XcbQpa.so.6
          cp ${QT_PLUGIN_PATH}/platforms/libqxcb.so gui-artifacts/platforms/libqxcb.so

      - name: Upload CLI release
        uses: actions/upload-artifact@v4
        with:
          name: "CHOpt CLI ${{ needs.determine-version.outputs.version }} (x64 Linux)"
          path: build/cli-artifacts/**/*
  
      - name: Upload GUI release
        uses: actions/upload-artifact@v4
        with:
          name: "CHOpt ${{ needs.determine-version.outputs.version }} (x64 Linux)"
          path: build/gui-artifacts/**/*
