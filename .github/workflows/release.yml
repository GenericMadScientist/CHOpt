name: release

on:
  push:
    tags:
      - 'v**'

jobs:
  determine-version:
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.determine-version.outputs.version }}
    steps:
      - id: determine-version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> "$GITHUB_OUTPUT"

  windows:
    runs-on: windows-2022
    needs: determine-version
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.5.*

      - name: Install other dependencies
        run: vcpkg --triplet x64-windows-static-md install boost-json boost-nowide boost-program-options libpng

      - name: Build
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_INSTALLATION_ROOT\scripts\buildsystems\vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-windows-static-md -DENABLE_LTO=ON -DPACKAGE_TESTS=OFF -G "Visual Studio 17 2022" ..
          cmake --build . --verbose --config Release

      - name: Prepare releases
        working-directory: build
        run: |
          mkdir cli-artifacts
          mkdir gui-artifacts
          cd Release
          Move-Item -Path chopt.exe -Destination ..\cli-artifacts\CHOpt.exe
          Rename-Item choptgui.exe CHOpt.exe
          $env:VCINSTALLDIR = "$env:ProgramFiles\Microsoft Visual Studio\2022\Enterprise\VC"
          windeployqt --release --no-network --no-opengl-sw --no-svg --no-system-d3d-compiler --no-translations CHOpt.exe
          rm vc_redist.x64.exe
          Copy-Item -Path * -Destination ..\gui-artifacts -Recurse

      - name: Upload CLI release
        uses: actions/upload-artifact@v3
        with:
          name: "CHOpt CLI ${{ needs.determine-version.outputs.version }} (x64 Windows)"
          path: build/cli-artifacts/**/*

      - name: Upload GUI release
        uses: actions/upload-artifact@v3
        with:
          name: "CHOpt ${{ needs.determine-version.outputs.version }} (x64 Windows)"
          path: build/gui-artifacts/**/*

  macos:
    runs-on: macos-12
    needs: determine-version
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.4.*

      - name: Install other dependencies
        run: brew install boost

      - name: Build
        run: |
          mkdir build
          cd build
          cmake -DENABLE_LTO=ON -DPACKAGE_TESTS=OFF -DBoost_USE_STATIC_LIBS=ON -DCMAKE_FIND_FRAMEWORK=LAST ..
          cmake --build . --verbose --config Release

      - name: Prepare releases
        working-directory: build
        run: |
          mkdir cli-artifacts
          mkdir gui-artifacts
          strip -x chopt
          install_name_tool -change /usr/local/opt/libpng/lib/libpng16.16.dylib @executable_path/libpng16.16.dylib chopt
          mv chopt cli-artifacts/CHOpt
          cp /usr/local/Cellar/libpng/1.6.40/lib/libpng16.16.dylib cli-artifacts/libpng16.16.dylib
          mv choptgui.app CHOpt.app
          mv CHOpt.app/Contents/MacOS/choptgui CHOpt.app/Contents/MacOS/CHOpt
          sed -i "" "s/choptgui/CHOpt/g" CHOpt.app/Contents/Info.plist
          macdeployqt CHOpt.app
          mv CHOpt.app gui-artifacts/CHOpt.app
  
      - name: Upload CLI release
        uses: actions/upload-artifact@v3
        with:
          name: "CHOpt CLI ${{ needs.determine-version.outputs.version }} (x64 Mac)"
          path: build/cli-artifacts/**/*

      - name: Upload GUI release
        uses: actions/upload-artifact@v3
        with:
          name: "CHOpt ${{ needs.determine-version.outputs.version }} (x64 Mac)"
          path: build/gui-artifacts/**/*

  linux:
    runs-on: ubuntu-22.04
    needs: determine-version
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.5.*

      - name: Install Boost 1.84.0
        run: |
          wget -O "$HOME/boost_1_84_0.tar.bz2" https://boostorg.jfrog.io/artifactory/main/release/1.84.0/source/boost_1_84_0.tar.bz2
          tar --bzip2 -xf "$HOME/boost_1_84_0.tar.bz2" -C "$HOME"
          cd "$HOME/boost_1_84_0"
          ./bootstrap.sh --with-libraries=json,nowide,program_options,test --prefix=.
          ./b2 toolset=gcc-13 install > /dev/null

      - name: Make build directory
        run: mkdir build

      - name: Generate build files
        working-directory: build
        env:
          BOOST_ROOT: ~/boost_1_84_0
          CXX: g++-13
        run: cmake -DENABLE_LTO=ON -DPACKAGE_TESTS=OFF -DBoost_USE_STATIC_LIBS=ON ..

      - name: Build
        working-directory: build
        run: cmake --build . --verbose --config Release

      - name: Prepare releases
        working-directory: build
        run: |
          mkdir cli-artifacts
          mkdir gui-artifacts
          strip -s chopt
          strip -s choptgui
          mv chopt cli-artifacts/CHOpt
          mv choptgui gui-artifacts/CHOpt
          mkdir gui-artifacts/libs
          mkdir gui-artifacts/platforms
          cp ../resources/CHOpt.sh gui-artifacts/CHOpt.sh
          cp ${Qt6_DIR}/lib/libicudata.so.56 gui-artifacts/libs/libicudata.so.56
          cp ${Qt6_DIR}/lib/libicui18n.so.56 gui-artifacts/libs/libicui18n.so.56
          cp ${Qt6_DIR}/lib/libicuuc.so.56 gui-artifacts/libs/libicuuc.so.56
          cp ${Qt6_DIR}/lib/libQt6Core.so.6 gui-artifacts/libs/libQt6Core.so.6
          cp ${Qt6_DIR}/lib/libQt6DBus.so.6 gui-artifacts/libs/libQt6DBus.so.6
          cp ${Qt6_DIR}/lib/libQt6Gui.so.6 gui-artifacts/libs/libQt6Gui.so.6
          cp ${Qt6_DIR}/lib/libQt6OpenGL.so.6 gui-artifacts/libs/libQt6OpenGL.so.6
          cp ${Qt6_DIR}/lib/libQt6Widgets.so.6 gui-artifacts/libs/libQt6Widgets.so.6
          cp ${Qt6_DIR}/lib/libQt6XcbQpa.so.6 gui-artifacts/libs/libQt6XcbQpa.so.6
          cp ${QT_PLUGIN_PATH}/platforms/libqxcb.so gui-artifacts/platforms/libqxcb.so

      - name: Upload CLI release
        uses: actions/upload-artifact@v3
        with:
          name: "CHOpt CLI ${{ needs.determine-version.outputs.version }} (x64 Linux)"
          path: build/cli-artifacts/**/*
  
      - name: Upload GUI release
        uses: actions/upload-artifact@v3
        with:
          name: "CHOpt ${{ needs.determine-version.outputs.version }} (x64 Linux)"
          path: build/gui-artifacts/**/*
